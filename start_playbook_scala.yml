---

- name: dev preparation
  hosts: localhost
  connection: local
  tasks:
  - name: Mount VM Ware shared folder
    when: ansible_virtualization_type == 'VMWare'
    mount:
      path: /mnt/hgfs
      src: vmhgfs-fuse
      fstype: fuse
      opts: defaults,allow_other
      state: present

  - name: install packages
    package:
      name: 
        - vim
        - mc
        - git
        - openjdk-17-jdk-headless
        - docker.io
        - docker-compose
      state: present

  - name: Install Intelij Idea, Visual Studio Code using snap repo
    snap:
      name: 
        - intellij-idea-community
        - code
      classic: true

  - name: Read intelij idea info file
    shell: cat /snap/intellij-idea-community/current/product-info.json
    register: intelij_info_output
  - name: save the intelij_info_output as json object
    set_fact:
      intelij_info_json: "{{ intelij_info_output.stdout | from_json }}"
  - name: read intelij folder name for plugins from intelij_info_json
    set_fact:
      intelij_directory_name_for_plugins: "{{ intelij_info_json | json_query('dataDirectoryName') }}"

  - name: install intelij idea plugins
    become_user: antonov
    become: true
    shell: '[ -d /home/antonov/.local/share/JetBrains/{{ intelij_directory_name_for_plugins }}/plugins/{{ item.folder_to_check }} ] || [ -f /home/antonov/.cache/JetBrains/{{ intelij_directory_name_for_plugins }}/plugins/{{ item.folder_to_check }}.zip ] || /snap/intellij-idea-community/current/bin/idea.sh installPlugins {{ item.id }} || echo true'
    args:
      executable: /bin/bash
    loop:
      - { id: "org.intellij.scala", folder_to_check: "Scala" } 


#   # - name: Extract oracle sql developer distr
#   #   unarchive:
#   #     dest: /opt
#   #     src: /mnt/hgfs/soft-linux/sqldeveloper-22.2.1.234.1810-no-jre.zip
#   #     owner: antonov
#   #     group: antonov

  # - name: add user antonov
  #   user:
  #     name: antonov
  #     shell: /bin/bash
  # - name: Create directory if it does not exist
  #   ansible.builtin.file:
  #     path: "{{ item }}"
  #     owner: antonov
  #     group: antonov
  #     state: directory
  #   loop:
  #     - /home/antonov/.ssh
  #     - /home/ansible/.ssh
  #     - /home/antonov/CODE
  #     - /home/antonov/CODE/sandbox-linux
  #     - /home/antonov/NOTES
  #     - /home/antonov/NOTES/it-notes
  # - name: Write private key for main user
  #   copy:
  #     content: "{{ github_private_key }}"
  #     dest: /home/antonov/.ssh/id_rsa
  #     owner: antonov
  #     force: false
  #     group: antonov
  #     mode: '0600'
  # - name: Write private key for ansible user
  #   copy:
  #     content: "{{ github_private_key }}"
  #     dest: /home/ansible/.ssh/id_rsa
  #     force: false
  #     mode: '0600'      
  # - name: Write public key for main user
  #   ansible.builtin.copy:
  #     content: "{{ github_public_key }}"
  #     dest: /home/antonov/.ssh/id_rsa.pub
  #     force: false
  #     mode: '0600'
  # - name: Write public key for ansible user
  #   ansible.builtin.copy:
  #     content: "{{ github_public_key }}"
  #     dest: /home/ansible/.ssh/id_rsa.pub
  #     owner: antonov
  #     group: antonov
  #     force: false
  #     mode: '0600'

  # - name: Add ssh agent line to sudoers
  #   lineinfile: 
  #     dest: /etc/sudoers
  #     state: present
  #     regexp: SSH_AUTH_SOCK
  #     line: Defaults env_keep += "SSH_AUTH_SOCK"

  # - name: start the ssh-agent
  #   shell: ssh-agent -s
  #   args:
  #     executable: /bin/bash

  # - name: add the ssh key to the ssh-agent
  #   expect:
  #     command: ssh-add /home/antonov/.ssh/id_rsa
  #     responses:
  #       Enter passphrase for /home/antonov/.ssh/id_rsa:  "{{ github_password_from_key }}"

  # - name: "git editor"
  #   git_config:
  #     name: core.editor
  #     scope: system
  #     value: "vim"

  # - name: "git email"
  #   git_config:
  #     name: user.email
  #     scope: system
  #     value: "antonov.buscorr@gmail.com"

  # - name: "git user name"
  #   git_config:
  #     name: user.name
  #     scope: system
  #     value: "Dmitrii_Antonov"

  # - name: Git checkout it-notes
  #   become_user: antonov
  #   become: true
  #   git:
  #     repo: git@github.com:antonovdmitriy/it-notes.git
  #     dest: /home/antonov/NOTES/it-notes
  #     accept_hostkey: true


  # - name: Git checkout code
  #   become_user: antonov
  #   become: true
  #   git:
  #     repo: git@github.com:antonovdmitriy/{{ item }}.git
  #     dest: /home/antonov/CODE/{{ item }}
  #     accept_hostkey: true
  #   with_items:
  #     - sandbox-linux
      
  # create two folders NOTES and CODE. Then install private key and public key to git. Then add email and user name to git. Then download projects from github to folder respectively. 
  # поставить google drive
  # поставить keepass
  # поставить oracle sql developer
  # поставить todo list
  