---
- name: Create temp directories for tech user
  become: false
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop: "{{ temp_directories_to_create }}"
- name: Merge lists for additional directories
  set_fact:
    directories_to_create: "{{ directories_to_create | default([]) | union(additional_directories | default([])) }}"  
- name: Create directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "755"
    state: directory
  loop: "{{ directories_to_create }}"
- name: Write private key for main user
  ansible.builtin.copy:
    content: "{{ github_private_key }}"
    dest: "{{ directory_for_ssh_main_user }}/id_rsa"
    owner: "{{ username }}"
    force: false
    group: "{{ username }}"
    mode: "{{ permissions_for_ssh_keys }}"
- name: Write private key for tech user
  become: false
  ansible.builtin.copy:
    content: "{{ github_private_key }}"
    dest: ~/.ssh/id_rsa
    force: false
    mode: "{{ permissions_for_ssh_keys }}"
- name: Write public key for main user
  ansible.builtin.copy:
    content: "{{ github_public_key }}"
    dest: "{{ directory_for_ssh_main_user }}/id_rsa.pub"
    owner: "{{ username }}"
    force: false
    group: "{{ username }}"
    mode: "{{ permissions_for_ssh_keys }}"
- name: Write public key for tech user
  become: false
  ansible.builtin.copy:
    content: "{{ github_public_key }}"
    dest: ~/.ssh/id_rsa.pub
    force: false
    mode: "{{ permissions_for_ssh_keys }}"
- name: Start the ssh-agent
  become_user: "{{ username }}"
  become: true
  ansible.builtin.shell: ssh-agent -s
  args:
    executable: /bin/bash
  register: ssh_agent_output
- name: Extract SSH_AUTH_SOCK from output
  ansible.builtin.set_fact:
    ssh_auth_sock: "{{ ssh_agent_output.stdout_lines | select('search', 'SSH_AUTH_SOCK=') | map('regex_replace', '.*SSH_AUTH_SOCK=([^;]+);.*', '\\1') | first }}"
- name: Add the ssh key to the ssh-agent
  become_user: "{{ username }}"
  become: true
  environment:
    SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
  ansible.builtin.expect:
    command: ssh-add {{ directory_for_ssh_main_user }}/id_rsa
    responses:
      "Enter passphrase for .*id_rsa: $": "{{ github_password_from_key }}"
- name: "Git editor"
  community.general.git_config:
    name: core.editor
    scope: system
    value: "vim"
- name: "Git email"
  community.general.git_config:
    name: user.email
    scope: system
    value: "{{ git_email }}"
- name: "Git user name"
  community.general.git_config:
    name: user.name
    scope: system
    value: "{{ git_user }}"
- name: Git checkout notes
  environment:
    SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
  become_user: "{{ username }}"
  become: true
  ansible.builtin.git:
    repo: "{{ github_path }}/{{ item }}.git"
    dest: "{{ directory_for_notes }}/{{ item }}"
    accept_hostkey: true
  with_items: "{{ notes_repositories_to_clone }}"
- name: Merge lists for additional code repositories
  set_fact:
    repositories_to_clone: "{{ repositories_to_clone | default([]) | union(additional_repositories | default([])) }}"  
- name: Git checkout code
  environment:
    SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
  become_user: "{{ username }}"
  become: true
  ansible.builtin.git:
    repo: "{{ github_path }}/{{ item }}.git"
    dest: "{{ directory_for_code }}/{{ item }}"
    accept_hostkey: true
  with_items: "{{ repositories_to_clone }}"
- name: Stop the ssh-agent
  become_user: "{{ username }}"
  become: true
  ansible.builtin.shell: "pkill ssh-agent"
