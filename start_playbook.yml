---

- name: Dev preparation
  hosts: localhost
  connection: local
  vars:
    bucket_name: sql-developer-for-personal-use  
    filename: sqldeveloper-22.2.1.234.1810-no-jre.zip
  tasks:
  - name: Mount VM Ware shared folder
    when: ansible_facts['virtualization_type'] == 'VMware'
    ansible.posix.mount:
      path: /mnt/hgfs
      src: vmhgfs-fuse
      fstype: fuse
      opts: defaults,allow_other
      state: present
  - name: Install packages
    ansible.builtin.package:
      name: 
        - vim
        - mc
        - git
        - maven
        - gradle
        - docker.io
        - docker-compose
        - openjdk-17-jdk
        - python3-pip
      state: present
  - name: Install Intelij Idea, Visual Studio Code using snap repo
    community.general.snap:
      name: 
        - intellij-idea-community
        - code
      classic: true

  - name: Add user antonov
    ansible.builtin.user:
      name: antonov
      shell: /bin/bash
  - name: Create directory if it does not exist
    ansible.builtin.file:
      path: "{{ item }}"
      owner: antonov
      group: antonov
      mode: "755"
      state: directory
    loop:
      - /home/antonov/.ssh
      - /home/ansible/.ssh
      - /home/antonov/CODE
      - /home/antonov/CODE/learning-aws-lambda
      - /home/antonov/CODE/learning-aws-lambda-springboot
      - /home/antonov/CODE/bridle
      - /home/antonov/CODE/earthquake
      - /home/antonov/CODE/sandbox-linux
      - /home/antonov/NOTES
      - /home/antonov/NOTES/it-notes
      - /opt/oracle-sql-developer
  - name: Write private key for main user
    ansible.builtin.copy:
      content: "{{ github_private_key }}"
      dest: /home/antonov/.ssh/id_rsa
      owner: antonov
      force: false
      group: antonov
      mode: '0600'
  - name: Write private key for ansible user
    ansible.builtin.copy:
      content: "{{ github_private_key }}"
      dest: /home/ansible/.ssh/id_rsa
      force: false
      mode: '0600'      
  - name: Write public key for main user
    ansible.builtin.copy:
      content: "{{ github_public_key }}"
      dest: /home/antonov/.ssh/id_rsa.pub
      force: false
      mode: '0600'
  - name: Write public key for ansible user
    ansible.builtin.copy:
      content: "{{ github_public_key }}"
      dest: /home/ansible/.ssh/id_rsa.pub
      owner: antonov
      group: antonov
      force: false
      mode: '0600'
  - name: Start the ssh-agent
    become_user: antonov
    become: true
    ansible.builtin.shell: ssh-agent -s
    args:
      executable: /bin/bash
    register: ssh_agent_output

  - name: Extract SSH_AUTH_SOCK from output
    ansible.builtin.set_fact:
      ssh_auth_sock: "{{ ssh_agent_output.stdout_lines | select('search', 'SSH_AUTH_SOCK=') | map('regex_replace', '.*SSH_AUTH_SOCK=([^;]+);.*', '\\1') | first }}"

  - name: Add the ssh key to the ssh-agent
    become_user: antonov
    become: true
    environment:
      SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
    ansible.builtin.expect:
      command: ssh-add /home/antonov/.ssh/id_rsa
      responses:
        Enter passphrase for /home/antonov/.ssh/id_rsa:  "{{ github_password_from_key }}"

  - name: "Git editor"
    community.general.git_config:
      name: core.editor
      scope: system
      value: "vim"

  - name: "Git email"
    community.general.git_config:
      name: user.email
      scope: system
      value: "antonov.buscorr@gmail.com"

  - name: "Git user name"
    community.general.git_config:
      name: user.name
      scope: system
      value: "Dmitrii_Antonov"

  - name: Git checkout it-notes # noqa: latest
    environment:
      SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
    become_user: antonov
    become: true
    ansible.builtin.git:
      repo: git@github.com:antonovdmitriy/it-notes.git
      dest: /home/antonov/NOTES/it-notes
      accept_hostkey: true

  - name: Git checkout code # noqa: latest
    environment:
      SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"  
    become_user: antonov
    become: true
    ansible.builtin.git:
      repo: git@github.com:antonovdmitriy/{{ item }}.git
      dest: /home/antonov/CODE/{{ item }}
      accept_hostkey: true
    with_items:
      - learning-aws-lambda
      - learning-aws-lambda-springboot
      - sandbox-linux
      - bridle
      - earthquake
  - name: Stop the ssh-agent
    become_user: antonov
    become: true
    ansible.builtin.shell: "pkill ssh-agent"

  - name: Ensure boto and boto3 modules are installed
    ansible.builtin.pip:
      name: ['boto3', 'botocore']

  - name: Download oracle sql developer distributive from s3
    amazon.aws.s3_object:
      bucket: "{{ bucket_name }}"
      aws_access_key: "{{ aws_access_key_id }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      object: "{{ filename }}"
      dest: /opt/oracle-sql-developer.zip
      mode: get
      overwrite: "False"

  - name: Extract oracle sql developer zip
    ansible.builtin.unarchive:
      src: /opt/oracle-sql-developer.zip
      creates: /opt/sqldeveloper
      dest: /opt/
      owner: antonov
      group: antonov

  - name: Check fact that oracle sql developer has been launched before
    ansible.builtin.stat:
      path: /home/antonov/.sqldeveloper
    register: stat_about_sqldeveloper_user_directory

  - name: First start oracle sql developer to write settings to home directory
    when: not stat_about_sqldeveloper_user_directory.stat.exists
    become_user: antonov
    become: true
    ansible.builtin.shell: timeout 15 sh /opt/sqldeveloper/sqldeveloper.sh
    args:
      executable: /bin/bash
    register: timeout_cmd
    failed_when: timeout_cmd.rc != 124

  - name: Delete oracle sql developer cache after interrupted start
    when: not stat_about_sqldeveloper_user_directory.stat.exists
    ansible.builtin.file:
      state: absent
      path: /home/antonov/.sqldeveloper/system22.2.1.234.1810/system_cache

  - name: Change font size for oracle sql developer
    become_user: antonov
    become: true
    ansible.builtin.lineinfile: 
      dest: /home/antonov/.sqldeveloper/system22.2.1.234.1810/o.sqldeveloper/ide.properties 
      state: present
      regexp: =18
      line: Ide.FontSize.en=18

  - name: Add oracle sql developer to favorites
    ansible.builtin.blockinfile:
      path: /usr/share/applications/sqldeveloper.desktop
      mode: "755"
      create: true
      block: |
        #!/usr/bin/env xdg-open
        [Desktop Entry]
        Version=1.0
        Type=Application
        Terminal=false
        Exec=/opt/sqldeveloper/sqldeveloper.sh
        Name=Oracle Sql Developer
        Comment=app for sql browsing
        Icon=/opt/sqldeveloper/icon.png
